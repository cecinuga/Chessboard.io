{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar gameState = {\n  chessboard: [[{\n    piece: \"\",\n    team: \"\",\n    color: \"\"\n  }]],\n  lastMove: {\n    firstStep: \"\",\n    piece: \"\",\n    secondMove: \"\"\n  },\n  graveyard: [[{\n    piece: \"\",\n    team: \"\"\n  }]]\n};\nexport var gameSlice = createSlice({\n  name: \"game\",\n  reducers: {\n    move: function move(state, action) {\n      return state;\n    },\n    lastMove: function lastMove(state, action) {\n      if (state.game.lastMove.firstStep == '' && state.game.lastMove.secondStep == '') {\n        state.game.lastMove.firstStep = action.payload.coo;\n        state.game.lastMove.piece = action.payload.piece;\n      }\n\n      return state;\n    }\n  },\n  initialState: gameState\n});\nvar _gameSlice$actions = gameSlice.actions,\n    move = _gameSlice$actions.move,\n    lastMove = _gameSlice$actions.lastMove;\nexport { move, lastMove };\nexport var gameReducer = gameSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","gameState","chessboard","piece","team","color","lastMove","firstStep","secondMove","graveyard","gameSlice","name","reducers","move","state","action","game","secondStep","payload","coo","initialState","actions","gameReducer","reducer"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/features/gameSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst gameState = {\n    chessboard: [[{ piece:\"\", team:\"\", color:\"\" }]],\n    lastMove:{firstStep:\"\", piece:\"\", secondMove:\"\"},\n    graveyard: [[{ piece: \"\", team:\"\" }]],\n}   \n\nexport const gameSlice = createSlice({ \n    name:\"game\",\n    reducers:{\n        move: (state, action) => {\n            return state;\n        },\n        lastMove: (state, action) => {\n            if(state.game.lastMove.firstStep==''&&state.game.lastMove.secondStep==''){ state.game.lastMove.firstStep=action.payload.coo;state.game.lastMove.piece=action.payload.piece;}\n            return state;\n        }\n    },\n    initialState: gameState,\n})\n\nexport const { move, lastMove } = gameSlice.actions;\nexport const gameReducer = gameSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,IAAMC,SAAS,GAAG;EACdC,UAAU,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAC,EAAR;IAAYC,IAAI,EAAC,EAAjB;IAAqBC,KAAK,EAAC;EAA3B,CAAD,CAAD,CADE;EAEdC,QAAQ,EAAC;IAACC,SAAS,EAAC,EAAX;IAAeJ,KAAK,EAAC,EAArB;IAAyBK,UAAU,EAAC;EAApC,CAFK;EAGdC,SAAS,EAAE,CAAC,CAAC;IAAEN,KAAK,EAAE,EAAT;IAAaC,IAAI,EAAC;EAAlB,CAAD,CAAD;AAHG,CAAlB;AAMA,OAAO,IAAMM,SAAS,GAAGX,WAAW,CAAC;EACjCY,IAAI,EAAC,MAD4B;EAEjCC,QAAQ,EAAC;IACLC,IAAI,EAAE,cAACC,KAAD,EAAQC,MAAR,EAAmB;MACrB,OAAOD,KAAP;IACH,CAHI;IAILR,QAAQ,EAAE,kBAACQ,KAAD,EAAQC,MAAR,EAAmB;MACzB,IAAGD,KAAK,CAACE,IAAN,CAAWV,QAAX,CAAoBC,SAApB,IAA+B,EAA/B,IAAmCO,KAAK,CAACE,IAAN,CAAWV,QAAX,CAAoBW,UAApB,IAAgC,EAAtE,EAAyE;QAAEH,KAAK,CAACE,IAAN,CAAWV,QAAX,CAAoBC,SAApB,GAA8BQ,MAAM,CAACG,OAAP,CAAeC,GAA7C;QAAiDL,KAAK,CAACE,IAAN,CAAWV,QAAX,CAAoBH,KAApB,GAA0BY,MAAM,CAACG,OAAP,CAAef,KAAzC;MAAgD;;MAC5K,OAAOW,KAAP;IACH;EAPI,CAFwB;EAWjCM,YAAY,EAAEnB;AAXmB,CAAD,CAA7B;yBAc2BS,SAAS,CAACW,O;IAA7BR,I,sBAAAA,I;IAAMP,Q,sBAAAA,Q;;AACrB,OAAO,IAAMgB,WAAW,GAAGZ,SAAS,CAACa,OAA9B"},"metadata":{},"sourceType":"module"}