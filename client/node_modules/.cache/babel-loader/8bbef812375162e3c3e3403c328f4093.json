{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit'; //import { userReducer } from '../features/userSlice';\n\nimport { lastMoveReducer } from '../features/moveSlice';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nvar userState = {\n  user: {\n    id: undefined,\n    address: undefined\n  }\n};\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n}\n\nexport var store = createStore(userReducer);","map":{"version":3,"names":["configureStore","lastMoveReducer","createStore","combineReducers","applyMiddleware","userState","user","id","undefined","address","userReducer","state","action","store"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\n//import { userReducer } from '../features/userSlice';\nimport { lastMoveReducer } from '../features/moveSlice';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\n\nconst userState = {\n  user: { id:undefined, address:undefined, }\n}\n\nfunction userReducer(state=userState, action){\n  return state;\n}\n\n\nexport const store = createStore(userReducer)"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AAEA,IAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;IAAEC,EAAE,EAACC,SAAL;IAAgBC,OAAO,EAACD;EAAxB;AADU,CAAlB;;AAIA,SAASE,WAAT,GAA6C;EAAA,IAAxBC,KAAwB,uEAAlBN,SAAkB;EAAA,IAAPO,MAAO;EAC3C,OAAOD,KAAP;AACD;;AAGD,OAAO,IAAME,KAAK,GAAGX,WAAW,CAACQ,WAAD,CAAzB"},"metadata":{},"sourceType":"module"}