{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { userReducer } from '../features/userSlice';\nimport { lastMoveReducer } from '../features/moveSlice';\nvar MOVE = \"MOVE\";\nvar initialState = {\n  chess: {\n    chessboard: [[{\n      coo: ''\n    }]],\n    lastMove: {\n      firstStep: '',\n      piece: '',\n      secondMove: ''\n    },\n    graveyard: [{}]\n  }\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MOVE:\n      break;\n  }\n}","map":{"version":3,"names":["configureStore","userReducer","lastMoveReducer","MOVE","initialState","chess","chessboard","coo","lastMove","firstStep","piece","secondMove","graveyard","rootReducer","state","action","type"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { userReducer } from '../features/userSlice';\nimport { lastMoveReducer } from '../features/moveSlice';\n\nconst MOVE = \"MOVE\";\n\nconst initialState = {\n  chess:{\n    chessboard:[[{coo:''}]],\n    lastMove: { firstStep:'', piece:'', secondMove:'' },\n    graveyard: [{}]\n  },\n}\n\nfunction rootReducer(state=initialState, action){\n  switch(action.type){\n    case MOVE: \n\n      break;\n  }\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,IAAMC,IAAI,GAAG,MAAb;AAEA,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAC;IACJC,UAAU,EAAC,CAAC,CAAC;MAACC,GAAG,EAAC;IAAL,CAAD,CAAD,CADP;IAEJC,QAAQ,EAAE;MAAEC,SAAS,EAAC,EAAZ;MAAgBC,KAAK,EAAC,EAAtB;MAA0BC,UAAU,EAAC;IAArC,CAFN;IAGJC,SAAS,EAAE,CAAC,EAAD;EAHP;AADa,CAArB;;AAQA,SAASC,WAAT,GAAgD;EAAA,IAA3BC,KAA2B,uEAArBV,YAAqB;EAAA,IAAPW,MAAO;;EAC9C,QAAOA,MAAM,CAACC,IAAd;IACE,KAAKb,IAAL;MAEE;EAHJ;AAKD"},"metadata":{},"sourceType":"module"}