{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar gameState = {\n  chessboard: [[{\n    piece: \"\",\n    team: \"\",\n    color: \"\"\n  }]],\n  graveyard: [[{\n    piece: \"\",\n    team: \"\"\n  }]]\n};\nexport var gameSlice = createSlice({\n  name: \"game\",\n  reducers: {\n    move: function move(state, action) {\n      return state;\n    }\n  },\n  initialState: gameState\n});\nvar move = gameSlice.actions.move;\nexport { move };\nexport var gameReducer = gameSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","gameState","chessboard","piece","team","color","graveyard","gameSlice","name","reducers","move","state","action","initialState","actions","gameReducer","reducer"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/features/gameSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst gameState = {\n    chessboard: [[{ piece:\"\", team:\"\", color:\"\" }]],\n    graveyard: [[{ piece: \"\", team:\"\" }]],\n}   \n\nexport const gameSlice = createSlice({ \n    name:\"game\",\n    reducers:{\n        move: (state, action) => {\n            return state;\n        }\n    },\n    initialState: gameState,\n})\n\nexport const { move } = gameSlice.actions;\nexport const gameReducer = gameSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,IAAMC,SAAS,GAAG;EACdC,UAAU,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAC,EAAR;IAAYC,IAAI,EAAC,EAAjB;IAAqBC,KAAK,EAAC;EAA3B,CAAD,CAAD,CADE;EAEdC,SAAS,EAAE,CAAC,CAAC;IAAEH,KAAK,EAAE,EAAT;IAAaC,IAAI,EAAC;EAAlB,CAAD,CAAD;AAFG,CAAlB;AAKA,OAAO,IAAMG,SAAS,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAC,MAD4B;EAEjCC,QAAQ,EAAC;IACLC,IAAI,EAAE,cAACC,KAAD,EAAQC,MAAR,EAAmB;MACrB,OAAOD,KAAP;IACH;EAHI,CAFwB;EAOjCE,YAAY,EAAEZ;AAPmB,CAAD,CAA7B;IAUQS,I,GAASH,SAAS,CAACO,O,CAAnBJ,I;;AACf,OAAO,IAAMK,WAAW,GAAGR,SAAS,CAACS,OAA9B"},"metadata":{},"sourceType":"module"}