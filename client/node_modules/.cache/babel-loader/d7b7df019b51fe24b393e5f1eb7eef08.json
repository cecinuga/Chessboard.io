{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar gameState = {\n  chessboard: [[{\n    piece: \"\",\n    team: \"\",\n    color: \"\"\n  }]],\n  lastMove: {\n    firstStep: \"\",\n    piece: \"\",\n    secondStep: \"\",\n    state: \"\"\n  },\n  graveyard: [[{\n    piece: \"\",\n    team: \"\"\n  }]]\n};\nexport var gameSlice = createSlice({\n  name: \"game\",\n  reducers: {\n    lastMove: function lastMove(state, action) {\n      if (state.lastMove.firstStep == \"\" && state.lastMove.secondStep == \"\") {\n        state.lastMove.firstStep = action.payload.coo;\n        state.lastMove.piece = action.payload.piece;\n      } else if (state.lastMove.firstStep != \"\" && state.lastMove.secondStep == \"\") {\n        state.lastMove.secondStep = action.payload.coo;\n      }\n\n      return state;\n    }\n  },\n  initialState: gameState\n});\nvar lastMove = gameSlice.actions.lastMove;\nexport { lastMove };\nexport var gameReducer = gameSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","gameState","chessboard","piece","team","color","lastMove","firstStep","secondStep","state","graveyard","gameSlice","name","reducers","action","payload","coo","initialState","actions","gameReducer","reducer"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/features/gameSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst gameState = {\n    chessboard: [[{ piece:\"\", team:\"\", color:\"\" }]],\n    lastMove:{firstStep:\"\", piece:\"\", secondStep:\"\", state:\"\"},\n    graveyard: [[{ piece: \"\", team:\"\" }]],\n}   \n\nexport const gameSlice = createSlice({ \n    name:\"game\",\n    reducers:{\n        lastMove: (state, action) => {\n            if(state.lastMove.firstStep==\"\"&&state.lastMove.secondStep==\"\"){ state.lastMove.firstStep=action.payload.coo;state.lastMove.piece=action.payload.piece;}\n            else if(state.lastMove.firstStep!=\"\"&&state.lastMove.secondStep==\"\"){ state.lastMove.secondStep=action.payload.coo;}\n            return state;\n        }\n    },\n    initialState: gameState,\n})\n\nexport const { lastMove } = gameSlice.actions;\nexport const gameReducer = gameSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,IAAMC,SAAS,GAAG;EACdC,UAAU,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAC,EAAR;IAAYC,IAAI,EAAC,EAAjB;IAAqBC,KAAK,EAAC;EAA3B,CAAD,CAAD,CADE;EAEdC,QAAQ,EAAC;IAACC,SAAS,EAAC,EAAX;IAAeJ,KAAK,EAAC,EAArB;IAAyBK,UAAU,EAAC,EAApC;IAAwCC,KAAK,EAAC;EAA9C,CAFK;EAGdC,SAAS,EAAE,CAAC,CAAC;IAAEP,KAAK,EAAE,EAAT;IAAaC,IAAI,EAAC;EAAlB,CAAD,CAAD;AAHG,CAAlB;AAMA,OAAO,IAAMO,SAAS,GAAGZ,WAAW,CAAC;EACjCa,IAAI,EAAC,MAD4B;EAEjCC,QAAQ,EAAC;IACLP,QAAQ,EAAE,kBAACG,KAAD,EAAQK,MAAR,EAAmB;MACzB,IAAGL,KAAK,CAACH,QAAN,CAAeC,SAAf,IAA0B,EAA1B,IAA8BE,KAAK,CAACH,QAAN,CAAeE,UAAf,IAA2B,EAA5D,EAA+D;QAAEC,KAAK,CAACH,QAAN,CAAeC,SAAf,GAAyBO,MAAM,CAACC,OAAP,CAAeC,GAAxC;QAA4CP,KAAK,CAACH,QAAN,CAAeH,KAAf,GAAqBW,MAAM,CAACC,OAAP,CAAeZ,KAApC;MAA2C,CAAxJ,MACK,IAAGM,KAAK,CAACH,QAAN,CAAeC,SAAf,IAA0B,EAA1B,IAA8BE,KAAK,CAACH,QAAN,CAAeE,UAAf,IAA2B,EAA5D,EAA+D;QAAEC,KAAK,CAACH,QAAN,CAAeE,UAAf,GAA0BM,MAAM,CAACC,OAAP,CAAeC,GAAzC;MAA8C;;MACpH,OAAOP,KAAP;IACH;EALI,CAFwB;EASjCQ,YAAY,EAAEhB;AATmB,CAAD,CAA7B;IAYQK,Q,GAAaK,SAAS,CAACO,O,CAAvBZ,Q;;AACf,OAAO,IAAMa,WAAW,GAAGR,SAAS,CAACS,OAA9B"},"metadata":{},"sourceType":"module"}