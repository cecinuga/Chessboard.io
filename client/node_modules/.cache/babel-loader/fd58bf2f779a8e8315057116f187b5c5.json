{"ast":null,"code":"import _toConsumableArray from \"/home/peterbruegel/GitHub/chessboard.io/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { configureStore, getDefaultMiddleware, createAction } from '@reduxjs/toolkit';\nimport { userReducer } from './features/userSlice';\nimport { userLogin, userLogout } from './features/userSlice';\n\nfunction loggerMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n}\n\nfunction apiMiddleware(_ref) {\n  var dispatch = _ref.dispatch;\n  return function (next) {\n    return function (action) {\n      switch (action.type) {\n        case userLogin.toString(): //loggati\n\n      }\n\n      return next(action);\n    };\n  };\n}\n\nvar middleware = [apiMiddleware, loggerMiddleware];\nexport var store = configureStore({\n  reducer: {\n    user: userReducer,\n    chessboard: chessboardReducer\n  },\n  middleware: [].concat(_toConsumableArray(getDefaultMiddleware()), middleware)\n});","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createAction","userReducer","userLogin","userLogout","loggerMiddleware","store","next","action","console","log","apiMiddleware","dispatch","type","toString","middleware","reducer","user","chessboard","chessboardReducer"],"sources":["/home/peterbruegel/GitHub/chessboard.io/client/src/app/store.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware, createAction } from '@reduxjs/toolkit';\nimport { userReducer } from './features/userSlice';\nimport { userLogin, userLogout } from './features/userSlice';\n\nfunction loggerMiddleware(store){\n  return function(next){\n    return function(action){\n      console.log(action);\n      return next(action);\n    }\n  }\n}\nfunction apiMiddleware({dispatch}){\n  return function(next){\n    return function(action){\n      switch(action.type){\n        case userLogin.toString():\n          //loggati\n      }\n      return next(action);\n    }\n  }\n}\nconst middleware = [apiMiddleware, loggerMiddleware];\n\nexport const store = configureStore({\n  reducer: { \n    user: userReducer,\n    chessboard: chessboardReducer,\n  },\n  middleware: [...getDefaultMiddleware(), ...middleware],\n});\n"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,oBAAzB,EAA+CC,YAA/C,QAAmE,kBAAnE;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,sBAAtC;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;EAC9B,OAAO,UAASC,IAAT,EAAc;IACnB,OAAO,UAASC,MAAT,EAAgB;MACrBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOD,IAAI,CAACC,MAAD,CAAX;IACD,CAHD;EAID,CALD;AAMD;;AACD,SAASG,aAAT,OAAkC;EAAA,IAAVC,QAAU,QAAVA,QAAU;EAChC,OAAO,UAASL,IAAT,EAAc;IACnB,OAAO,UAASC,MAAT,EAAgB;MACrB,QAAOA,MAAM,CAACK,IAAd;QACE,KAAKV,SAAS,CAACW,QAAV,EAAL,CADF,CAEI;;MAFJ;;MAIA,OAAOP,IAAI,CAACC,MAAD,CAAX;IACD,CAND;EAOD,CARD;AASD;;AACD,IAAMO,UAAU,GAAG,CAACJ,aAAD,EAAgBN,gBAAhB,CAAnB;AAEA,OAAO,IAAMC,KAAK,GAAGP,cAAc,CAAC;EAClCiB,OAAO,EAAE;IACPC,IAAI,EAAEf,WADC;IAEPgB,UAAU,EAAEC;EAFL,CADyB;EAKlCJ,UAAU,+BAAMf,oBAAoB,EAA1B,GAAiCe,UAAjC;AALwB,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}